-- Project Name : CORE_PAYROLL
-- Date/Time    : 2020/03/26 17:09:26
-- Author       : ASAOKA.TAKUMI
-- RDBMS Type   : Oracle Database
-- Application  : A5:SQL Mk-2

create table BILLING_STATUS (
  BILLING_STATUS NUMBER not null
  , UPDATE_DATE TIMESTAMP not null
  , INVOICE_STATEMENT_ID NUMBER not null
)
/

create table CANCELED_FT_UNITS (
  FT_UNIT_ID NUMBER not null
  , CANCELED_DATE TIMESTAMP not null
  , constraint CANCELED_FT_UNITS_PKC primary key (FT_UNIT_ID)
)
/

create table CHARGE_ORDERS (
  INVOICE_STATEMENT_ID NUMBER not null
  , CHARGE_ORDER_ID NUMBER not null
  , CHARGE_MONEY NUMBER not null
  , PAYROLL_CARD_ID NUMBER not null
  , DESIRED_CHARGE_MONEY NUMBER not null
  , PRIORITY NUMBER not null
  , FT_COMPANY_ID NUMBER not null
  , constraint CHARGE_ORDERS_PKC primary key (CHARGE_ORDER_ID)
)
/

create table CHARGE_REQUEST_STATUS (
  CHARGE_REQUEST_ID NUMBER not null
  , CHARGE_REQUEST_STATUS NUMBER not null
  , UPDATE_DATE TIMESTAMP not null
)
/

create table CONTRACTS (
  COMPANY_ID NUMBER not null
  , FT_COMPANY_ID NUMBER not null
  , CREATED_DATE TIMESTAMP not null
  , constraint CONTRACTS_PKC primary key (COMPANY_ID,FT_COMPANY_ID)
)
/

create table EMPLOYEE_ACCOUNTS (
  EMPLOYEE_ID NUMBER not null
  , FINANCIAL_INSTITUTION_CODE NVARCHAR2(100) not null
  , TYPE_NUMBER NVARCHAR2(100) not null
  , ACCOUNT_NUMBER NVARCHAR2(100) not null
  , constraint EMPLOYEE_ACCOUNTS_PKC primary key (EMPLOYEE_ID)
)
/

create table FT_COMPANY_NOTIFICATIONS (
  FT_COMPANY_NOTIFICATION_ID NUMBER not null
  , TITLE NVARCHAR2(100) not null
  , NOTIFICATION_DATE TIMESTAMP not null
  , FT_COMPANY_ID NUMBER not null
  , constraint FT_COMPANY_NOTIFICATIONS_PKC primary key (FT_COMPANY_NOTIFICATION_ID)
)
/

create table FT_UNIT_STATUS (
  FT_UNIT_ID NUMBER not null
  , FT_UNIT_STATUS NUMBER not null
  , UPDATE_DATE TIMESTAMP not null
)
/

create table MQ_COMPANIES (
  MQ_COMPANY_ID NUMBER not null
  , COMPANY_NAME VARCHAR2(100) not null
  , POSTAL_CODE NVARCHAR2(100) not null
  , ADDRESS NVARCHAR2(100) not null
  , PHONE_NUMBER NVARCHAR2(100) not null
  , BANK_NAME NVARCHAR2(100) not null
  , BRANCH_NAME NVARCHAR2(100) not null
  , ACCOUNT_TYPE NUMBER not null
  , ACCOUNT_HOLDER NVARCHAR2(100) not null
  , FINANCIAL_INSTITUTION_CODE NVARCHAR2(100) not null
  , TYPE_NUMBER NVARCHAR2(100) not null
  , ACCOUNT_NUMBER NVARCHAR2(100) not null
  , constraint MQ_COMPANIES_PKC primary key (MQ_COMPANY_ID)
)
/

create table NOTIFICATION_TEMPLATES (
  NOTIFICATION_TEMPLATE_ID NUMBER not null
  , NOTIFICATION_TEMPLATE NVARCHAR2(100) not null
  , constraint NOTIFICATION_TEMPLATES_PKC primary key (NOTIFICATION_TEMPLATE_ID)
)
/

create table PAYMENT_STATUS (
  PAYMENT_STATUS NUMBER not null
  , UPDATE_DATE TIMESTAMP not null
  , INVOICE_STATEMENT_ID NUMBER not null
)
/

create table PAYMENT_STATUS_REQUESTS (
  PAYMENT_STATUS_REQUEST NUMBER not null
  , UPDATE_DATE TIMESTAMP not null
  , INVOICE_STATEMENT_ID NUMBER not null
)
/

create table PAYROLL_CARDS (
  PAYROLL_CARD_ID NUMBER
  , EMPLOYEE_ID NUMBER not null
  , FT_COMPANY_ID NUMBER not null
  , CARD_LABEL NVARCHAR2(100)
  , DESIRED_CHARGE_MONEY NUMBER
  , PRIORITY NUMBER
  , UPDATE_DATE TIMESTAMP
)
/

create table REPRESENTATIVES (
  REPRESENTATIVE_ID NUMBER not null
  , REPRESENTATIVE_NAME VARCHAR2(100) not null
  , COMPANY_ID NUMBER not null
  , constraint REPRESENTATIVES_PKC primary key (REPRESENTATIVE_ID)
)
/

create table CHARGE_REQUESTS (
  FT_UNIT_ID NUMBER not null
  , CHARGE_REQUEST_ID NUMBER not null
  , TRANSFER_AMOUNT_OF_MONEY NUMBER not null
  , ACCOUNT_HOLDER VARCHAR2(100) not null
  , FINANCIAL_INSTITUTION_CODE VARCHAR2(100) not null
  , TYPE_NUMBER VARCHAR2(100) not null
  , ACCOUNT_NUMBER VARCHAR2(100) not null
  , constraint CHARGE_REQUESTS_PKC primary key (CHARGE_REQUEST_ID)
)
/

create table EMPLOYEES (
  EMPLOYEE_ID NUMBER not null
  , ACCOUNT_HOLDER NVARCHAR2(100) not null
  , COMPANY_ID NUMBER not null
  , constraint EMPLOYEES_PKC primary key (EMPLOYEE_ID)
)
/

create table FT_COMPANIES (
  FT_COMPANY_ID NUMBER not null
  , FT_COMPANY_NUMBER NVARCHAR2(100) not null
  , FT_COMPANY_NAME NVARCHAR2(100) not null
  , constraint FT_COMPANIES_PKC primary key (FT_COMPANY_ID)
)
/

create table INVOICE_STATEMENTS (
  FT_UNIT_ID NUMBER not null
  , INVOICE_STATEMENT_ID NUMBER not null
  , INVOICE_NUMBER VARCHAR2(100) not null
  , PAYMENT_DEADLINE DATE not null
  , constraint INVOICE_STATEMENTS_PKC primary key (INVOICE_STATEMENT_ID)
)
/

create table FT_UNITS (
  FT_UNIT_ID NUMBER not null
  , CHARGE_DATE DATE not null
  , CREATED_DATE TIMESTAMP not null
  , COMPANY_ID NUMBER not null
  , constraint FT_UNITS_PKC primary key (FT_UNIT_ID)
)
/

create table COMPANIES (
  COMPANY_ID NUMBER not null
  , COMPANY_NAME VARCHAR2(100) not null
  , POSTAL_CODE VARCHAR2(100) not null
  , ADDRESS VARCHAR2(100) not null
  , constraint COMPANIES_PKC primary key (COMPANY_ID)
)
/

create view CANCELED_FT_UNITS_VIEW as 
SELECT
	FT_UNITS.FT_UNIT_ID FT_UNIT_ID,
	FT_UNITS.CHARGE_DATE CHARGE_DATE,
	FT_UNITS.CREATED_DATE CREATED_DATE,
	FT_UNITS.COMPANY_ID COMPANY_ID,
	CANCELED_FT_UNITS.CANCELED_DATE CANCELED_DATE
FROM
	FT_UNITS
	INNER JOIN CANCELED_FT_UNITS
	ON FT_UNITS.FT_UNIT_ID = CANCELED_FT_UNITS.FT_UNIT_ID

/

create view CHARGE_REQUESTS_VIEW as 
SELECT
	CHARGE_REQUESTS.CHARGE_REQUEST_ID CHARGE_REQUEST_ID,
	CHARGE_REQUESTS.FT_UNIT_ID FT_UNIT_ID,
	CHARGE_REQUESTS.TRANSFER_AMOUNT_OF_MONEY TRANSFER_AMOUNT_OF_MONEY,
	CHARGE_REQUESTS.ACCOUNT_HOLDER ACCOUNT_HOLDER,
	CHARGE_REQUESTS.FINANCIAL_INSTITUTION_CODE FINANCIAL_INSTITUTION_CODE,
	CHARGE_REQUESTS.TYPE_NUMBER TYPE_NUMBER,
	CHARGE_REQUESTS.ACCOUNT_NUMBER ACCOUNT_NUMBER,
	STATUS_LATEST.CHARGE_REQUEST_STATUS CHARGE_REQUEST_STATUS,
	STATUS_LATEST.UPDATE_DATE UPDATE_DATE
FROM
	CHARGE_REQUESTS
	INNER JOIN (
		SELECT
			CHARGE_REQUEST_ID,
			CHARGE_REQUEST_STATUS,
			UPDATE_DATE
		FROM (
			SELECT
				ROW_NUMBER() OVER (PARTITION BY CHARGE_REQUEST_ID ORDER BY UPDATE_DATE DESC) AS idx,
				CHARGE_REQUEST_ID,
				CHARGE_REQUEST_STATUS,
				UPDATE_DATE
			FROM
				CHARGE_REQUEST_STATUS )
		WHERE
			idx = 1 ) STATUS_LATEST
	ON CHARGE_REQUESTS.CHARGE_REQUEST_ID = STATUS_LATEST.CHARGE_REQUEST_ID
			

/

create view EMPLOYEES_VIEW as 
SELECT
	EMPLOYEES.EMPLOYEE_ID EMPLOYEE_ID,
	EMPLOYEES.COMPANY_ID COMPANY_ID,
	EMPLOYEES.ACCOUNT_HOLDER ACCOUNT_HOLDER,
	EMPLOYEE_ACCOUNTS.FINANCIAL_INSTITUTION_CODE FINANCIAL_INSTITUTION_CODE,
	EMPLOYEE_ACCOUNTS.TYPE_NUMBER TYPE_NUMBER,
	EMPLOYEE_ACCOUNTS.ACCOUNT_NUMBER ACCOUNT_NUMBER
FROM
	EMPLOYEES 
	INNER JOIN EMPLOYEE_ACCOUNTS
	ON EMPLOYEES.EMPLOYEE_ID = EMPLOYEE_ACCOUNTS.EMPLOYEE_ID
	

/

create view INVOICE_STATEMENTS_VIEW as 
SELECT
	INVOICE_STATEMENTS.INVOICE_STATEMENT_ID INVOICE_STATEMENT_ID,
	INVOICE_STATEMENTS.FT_UNIT_ID FT_UNIT_ID,
	INVOICE_STATEMENTS.INVOICE_NUMBER INVOICE_NUMBER,
	INVOICE_STATEMENTS.PAYMENT_DEADLINE PAYMENT_DEADLINE,
	BILLING_STATUS_LATEST.BILLING_STATUS BILLING_STATUS,
	BILLING_STATUS_LATEST.BILLING_STATUS_UPDATE_DATE BILLING_STATUS_UPDATE_DATE,
	PAYMENT_STATUS_LATEST.PAYMENT_STATUS PAYMENT_STATUS,
	PAYMENT_STATUS_LATEST.PAYMENT_STATUS_UPDATE_DATE PAYMENT_STATUS_UPDATE_DATE,
	PAYMENT_REQUESTS_LATEST.PAYMENT_STATUS_REQUEST PAYMENT_STATUS_REQUEST,
	PAYMENT_REQUESTS_LATEST.PAYMENT_REQUEST_UPDATE_DATE PAYMENT_REQUEST_UPDATE_DATE
FROM
	INVOICE_STATEMENTS
	INNER JOIN ( ( 
		SELECT 
			INVOICE_STATEMENT_ID,
			BILLING_STATUS,
			UPDATE_DATE BILLING_STATUS_UPDATE_DATE
		FROM (
			SELECT 
				ROW_NUMBER() OVER (PARTITION BY INVOICE_STATEMENT_ID ORDER BY UPDATE_DATE DESC) AS idx,
				INVOICE_STATEMENT_ID,
				BILLING_STATUS,
				UPDATE_DATE
			FROM 
				BILLING_STATUS )
		WHERE
			idx = 1 ) BILLING_STATUS_LATEST 
		INNER JOIN ( ( 
			SELECT
				INVOICE_STATEMENT_ID,
				PAYMENT_STATUS,
				UPDATE_DATE PAYMENT_STATUS_UPDATE_DATE
			FROM (
				SELECT
					ROW_NUMBER() OVER (PARTITION BY INVOICE_STATEMENT_ID ORDER BY UPDATE_DATE DESC) AS idx,
					INVOICE_STATEMENT_ID,
					PAYMENT_STATUS,
					UPDATE_DATE
				FROM
					PAYMENT_STATUS )
			WHERE
				idx = 1 ) PAYMENT_STATUS_LATEST 
			INNER JOIN (
				SELECT
					INVOICE_STATEMENT_ID,
					PAYMENT_STATUS_REQUEST,
					UPDATE_DATE PAYMENT_REQUEST_UPDATE_DATE
				FROM (
					SELECT
						ROW_NUMBER() OVER (PARTITION BY INVOICE_STATEMENT_ID ORDER BY UPDATE_DATE DESC) AS idx,
						INVOICE_STATEMENT_ID,
						PAYMENT_STATUS_REQUEST,
						UPDATE_DATE
					FROM
						PAYMENT_STATUS_REQUESTS )
				WHERE
					idx = 1 ) PAYMENT_REQUESTS_LATEST
			ON PAYMENT_STATUS_LATEST.INVOICE_STATEMENT_ID = PAYMENT_REQUESTS_LATEST.INVOICE_STATEMENT_ID )
		ON BILLING_STATUS_LATEST.INVOICE_STATEMENT_ID = PAYMENT_STATUS_LATEST.INVOICE_STATEMENT_ID )
	ON INVOICE_STATEMENTS.INVOICE_STATEMENT_ID = BILLING_STATUS_LATEST.INVOICE_STATEMENT_ID

/

create view NOT_CANCELED_FT_UNITS_VIEW as 
SELECT
	FT_UNITS.FT_UNIT_ID FT_UNIT_ID,
	FT_UNITS.CHARGE_DATE CHARGE_DATE,
	FT_UNITS.CREATED_DATE CREATED_DATE,
	FT_UNITS.COMPANY_ID COMPANY_ID,
	STATUS_LATEST.FT_UNIT_STATUS FT_UNIT_STATUS,
	STATUS_LATEST.UPDATE_DATE UPDATE_DATE
FROM
	FT_UNITS
	INNER JOIN (
		SELECT
			FT_UNIT_ID,
			FT_UNIT_STATUS,
			UPDATE_DATE
		FROM (
			SELECT
				ROW_NUMBER() OVER (PARTITION BY FT_UNIT_ID ORDER BY UPDATE_DATE DESC) AS idx,
				FT_UNIT_ID,
				FT_UNIT_STATUS,
				UPDATE_DATE
			FROM
				FT_UNIT_STATUS )
		WHERE
			idx = 1 ) STATUS_LATEST
	ON FT_UNITS.FT_UNIT_ID = STATUS_LATEST.FT_UNIT_ID
WHERE
	NOT EXISTS (
		SELECT
			FT_UNIT_ID
		FROM
			CANCELED_FT_UNITS
		WHERE
			FT_UNITS.FT_UNIT_ID = CANCELED_FT_UNITS.FT_UNIT_ID )

/

